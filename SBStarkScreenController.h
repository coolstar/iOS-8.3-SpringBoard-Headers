/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "SBAlertObserver.h"
#import "FBWindowContextManagerDelegate.h"
#import "_UISettingsKeyObserver.h"
#import "SpringBoard-Structs.h"
#import "AVExternalDeviceDelegate.h"
#import "FBWindowContextManagerObserver.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "SBAlertManagerObserver.h"
#import "UIStatusBarStyleDelegate.h"
#import "SBStarkIconControllerDelegate.h"
#import "SBAlertManagerDelegate.h"

@class SBStarkFakeIconOperationController, SBStarkIconWindow, SBStarkNotificationWindow, FBScene, SBStarkNotificationViewController, UIWindow, SBStarkIconController, SBStarkAnimationWindow, UIScreen, SBStarkSessionConfiguration, NSHashTable, SBWindow, NSMutableOrderedSet, SBStarkLockOutViewController, SBAlertManager, SBAssistantWindow, SBStarkNowPlayingWindow, SBStarkStatusBarWindow, NSMapTable, NSString, SBStarkStatusBarViewController, SBStarkScreenFocusController, SBCarDisplaySettings, SBStarkNowPlayingController, AVExternalDevice, SBStarkLockOutWindow, FBSDisplay;
@protocol SBStarkScreenControllerDelegate, SBStarkSessionConfiguring, SBDisplayProtocol;

__attribute__((visibility("hidden")))
@interface SBStarkScreenController : XXUnknownSuperclass <SBAlertManagerDelegate, SBAlertManagerObserver, SBAlertObserver, UIStatusBarStyleDelegate, _UISettingsKeyObserver, AVExternalDeviceDelegate, FBWindowContextManagerDelegate, FBWindowContextManagerObserver, SBStarkIconControllerDelegate> {
	SBStarkSessionConfiguration* _configuration;
	FBSDisplay* _fbsDisplay;
	UIScreen* _screen;
	SBCarDisplaySettings* _settings;
	id<SBStarkScreenControllerDelegate> _delegate;
	id<SBDisplayProtocol> _actualTopDisplay;
	id<SBDisplayProtocol> _effectiveTopDisplay;
	NSMutableOrderedSet* _alertSheets;
	NSMapTable* _alertSheetsToWindowMap;
	NSHashTable* _observers;
	int _screenState;
	int _lockOutMode;
	BOOL _delayUpdatingLockOutMode;
	SBStarkLockOutViewController* _lockOutViewController;
	SBStarkLockOutWindow* _lockOutWindow;
	SBStarkAnimationWindow* _animationWindow;
	FBScene* _nowPlayingScene;
	SBStarkNowPlayingController* _nowPlayingController;
	SBStarkNowPlayingWindow* _nowPlayingWindow;
	BOOL _showingNowPlaying;
	SBStarkIconController* _iconController;
	SBStarkIconWindow* _iconWindow;
	SBStarkStatusBarViewController* _statusBarViewController;
	SBStarkStatusBarWindow* _statusBarWindow;
	SBStarkNotificationWindow* _notificationWindow;
	SBAssistantWindow* _siriWindow;
	int _siriState;
	SBAlertManager* _alertManager;
	id _alertBorrowScreenToken;
	id _siriBorrowScreenToken;
	SBStarkScreenFocusController* _focusController;
	SBStarkFakeIconOperationController* _fakeIconOperationController;
	AVExternalDevice* _externalDevice;
	BOOL _externalDeviceScreenAvailable;
	BOOL _isPairedScreen;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(readonly, assign, nonatomic, getter=isShowingNowPlaying) BOOL showNowPlaying;
@property(retain, nonatomic) id<SBDisplayProtocol> effectiveTopDisplay;
@property(readonly, assign, nonatomic) BOOL isPairedScreen;
@property(readonly, retain, nonatomic) SBStarkStatusBarViewController* statusBarController;
@property(readonly, retain, nonatomic) SBStarkNotificationViewController* notificationController;
@property(readonly, retain, nonatomic) SBStarkIconController* iconController;
@property(readonly, retain, nonatomic) SBWindow* lockoutWindow;
@property(readonly, retain, nonatomic) SBWindow* iconWindow;
@property(readonly, retain, nonatomic) UIWindow* focusWindow;
@property(readonly, retain, nonatomic) SBWindow* animationWindow;
@property(readonly, retain, nonatomic) SBAlertManager* alertManager;
@property(assign, nonatomic) id<SBStarkScreenControllerDelegate> delegate;
@property(readonly, assign, nonatomic) int state;
@property(readonly, retain, nonatomic) FBSDisplay* fbsDisplay;
@property(readonly, retain, nonatomic) UIScreen* screen;
@property(readonly, retain, nonatomic) id<SBStarkSessionConfiguring> sessionConfiguration;
+(void)_launchNowPlaying;
-(id)animationWindowForIconController:(id)iconController;
-(void)windowContextManagerDidStopTrackingContexts:(id)windowContextManager;
-(void)windowContextManagerWillStartTrackingContexts:(id)windowContextManager;
-(BOOL)windowContextManager:(id)manager shouldAddContext:(id)context;
-(void)siriRequestedWithAction:(int)action;
-(void)iOSUIRequestedForApplicationURL:(id)applicationURL;
-(void)settings:(id)settings changedValueForKey:(id)key;
-(void)statusBar:(id)bar didTriggerButtonType:(int)type withAction:(int)action;
-(void)statusBar:(id)bar didAnimateFromHeight:(float)height toHeight:(float)height3 animation:(int)animation;
-(void)statusBar:(id)bar willAnimateFromHeight:(float)height toHeight:(float)height3 duration:(double)duration animation:(int)animation;
-(int)statusBar:(id)bar styleForRequestedStyle:(int)requestedStyle overrides:(int)overrides;
-(void)alertManager:(id)manager didCreateAlertWindow:(id)window;
-(void)alertManager:(id)manager willTearDownAlertWindow:(id)window;
-(void)alertManager:(id)manager didDeactivateAlert:(id)alert top:(BOOL)top;
-(void)alertManager:(id)manager willActivateAlert:(id)alert overAlerts:(id)alerts;
-(BOOL)alertManager:(id)manager shouldDeactivateDismissedAlert:(id)alert;
-(id)alertManager:(id)manager newAlertWindowForScene:(id)scene;
-(float)sceneLevelForAlerts;
-(CGRect)sceneFrameForAlerts:(id)alerts;
-(void)alertBannerSuppressionChanged:(id)changed;
-(CGRect)_defaultScreenFrameOffsetForStatusBar:(id)statusBar;
-(void)_toggleNotificationSuspendedState;
-(BOOL)_allowNavigationOverrideStyle;
-(BOOL)_allowInCallOverrideStyle;
-(void)_toggleNowPlayingVisible:(BOOL)visible;
-(void)_createFakeIconOperationController;
-(void)_didChangeFromState:(int)state;
-(void)_updateLockOutMode;
-(void)_hideWindowsForSetup:(BOOL)setup;
-(void)_setSiriState:(int)state;
-(void)_viewController:(id)controller animateDisappearanceWithContext:(id)context;
-(void)_viewController:(id)controller willAnimateDisappearanceWithContext:(id)context;
-(void)_viewController:(id)controller animateAppearanceWithContext:(id)context;
-(void)_viewController:(id)controller willAnimateAppearanceWithContext:(id)context;
-(void)_externalDeviceScreenBecameUnavailable:(id)unavailable;
-(void)_externalDeviceScreenBecameAvailable:(id)available;
-(void)_updateAlertSheetFocus;
-(void)_alertSheetDismissed:(id)dismissed;
-(void)_alertSheetPresented:(id)presented;
-(void)_dismissSiriWithFactory:(id)factory animations:(id)animations completion:(id)completion;
-(void)_takeScreenIfNecessaryForTopDisplayActivation;
-(void)_handleMenuEventAndTakeScreen:(BOOL)screen;
-(id)_newNowPlayingScene;
-(void)_noteSetupCompleted;
-(void)_noteInitializationCompleted;
-(void)removeObserver:(id)observer;
-(void)addObserver:(id)observer;
-(void)cleanupForTopDisplayIfNecessaryWithAnimationFactory:(id)animationFactory;
-(void)dismissSiriWithAnimation:(int)animation factory:(id)factory completion:(id)completion;
-(BOOL)presentSiri:(BOOL)siri viewController:(id)controller;
-(void)handleLongBackPress;
-(void)handleUnhandledBack;
-(void)handleACHomeUp;
-(void)handleUncompletedAppLaunch;
-(void)notifyWhenNowPlayingIsActive:(id)active withTimeout:(double)timeout;
-(id)nowPlayingSnapshot;
-(id)nowPlayingContextHostManager;
-(void)setNowPlayingBundleID:(id)anId;
-(void)updateStatusBarStateForDisplay:(id)display withAnimationFactory:(id)animationFactory;
-(void)setEffectiveTopDisplay:(id)display actualTopDisplay:(id)display2 withAnimationFactory:(id)animationFactory;
-(void)setEffectiveTopDisplay:(id)display withAnimationFactory:(id)animationFactory;
-(void)invalidate;
-(void)_tearDownAndInvalidate:(BOOL)invalidate;
-(void)dealloc;
-(id)init;
-(id)initWithConfiguration:(id)configuration;
@end

