/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "SBAlert.h"
#import "SpringBoard-Structs.h"

@class SBLockScreenActionContext;
@protocol SBLockScreenViewControllerDelegate;

__attribute__((visibility("hidden")))
@interface SBLockScreenViewControllerBase : SBAlert {
	id<SBLockScreenViewControllerDelegate> _delegate;
	SBLockScreenActionContext* _customLockScreenActionContext;
}
@property(assign, nonatomic) id<SBLockScreenViewControllerDelegate> delegate;
-(id)allPendingAlertItems;
-(BOOL)hasSuperModalAlertItems;
-(id)currentAlertItem;
-(id)dequeueAllPendingSuperModalAlertItems;
-(void)deactivateAlertItem:(id)item animated:(BOOL)animated;
-(BOOL)activateAlertItem:(id)item animated:(BOOL)animated;
-(BOOL)wantsToHandleAlert:(id)handleAlert;
-(BOOL)handleExternalKeyDownEvent;
-(void)noteResetRestoreStateUpdated;
-(void)noteDeviceBlockedStatusUpdated;
-(BOOL)isLockScreenVisible;
-(BOOL)isShowingOverheatUI;
-(void)shakeSlideToUnlockTextWithCustomText:(id)customText;
-(void)updateInterfaceIfNecessary;
-(void)setShowingMediaControls:(BOOL)controls;
-(BOOL)isShowingMediaControls;
-(void)updateOrientationForUndim;
-(BOOL)lockScreenBulletinControllerIsActive;
-(void)setCustomLockScreenActionContext:(id)context;
-(id)_customLockScreenActionContext;
-(id)currentLockScreenActionContext;
-(void)noteModalBannerIsVisible:(BOOL)visible;
-(BOOL)lockScreenIsShowingBulletins;
-(BOOL)shouldShowStatusBarOnDeactivation;
-(BOOL)shouldShowLockStatusBarTime;
-(BOOL)shouldShowSlideshowButton;
-(BOOL)handleMenuButtonHeld;
-(BOOL)handleMenuButtonTap;
-(void)noteExitingLostMode;
-(void)prepareToEnterLostMode;
-(void)updateCardItem:(id)item;
-(void)deactivateCardItem:(id)item;
-(void)activateCardItem:(id)item animated:(BOOL)animated;
-(BOOL)allowAnimatedDismissalForLockScreenPlugin;
-(void)updateCustomSubtitleTextForAwayViewPlugin:(id)awayViewPlugin;
-(void)adjustLockScreenContentByOffset:(float)offset forPluginController:(id)pluginController withAnimationDuration:(double)animationDuration;
-(CGRect)defaultContentRegionForPluginController:(id)pluginController withOrientation:(int)orientation;
-(void)disableLockScreenBundleWithName:(id)name deactivationContext:(id)context;
-(void)enableLockScreenBundleWithName:(id)name activationContext:(id)context;
-(id)activeLockScreenPluginController;
-(BOOL)isLockScreenPluginViewVisible;
-(BOOL)hasActiveUIAccessories;
-(void)setInScreenOffMode:(BOOL)screenOffMode forAutoUnlock:(BOOL)autoUnlock;
-(void)setInScreenOffMode:(BOOL)screenOffMode;
-(BOOL)isInScreenOffMode;
-(void)startLockScreenFadeInAnimationForSource:(int)source;
-(BOOL)canRelockForAutoDimTimer;
-(BOOL)wantsScreenToAutoDim;
-(void)prepareForMesaUnlockWithCompletion:(id)completion;
-(void)biometricEventMonitor:(id)monitor handleBiometricEvent:(unsigned)event;
-(void)noteNextUnlockShouldReturnToCallIfPossible:(BOOL)noteNextUnlock;
-(BOOL)isHidingPasscodeViewDuringCall;
-(void)setForcesPasscodeViewDuringCall:(BOOL)call;
-(void)handlePhoneAppExitedIfNecessary;
-(void)noteStartingPhoneCallWhileUILocked;
-(BOOL)isMakingEmergencyCall;
-(void)emergencyDialerExitedWithError:(id)error;
-(void)exitEmergencyDialerAnimated:(BOOL)animated;
-(void)launchEmergencyDialer;
-(void)activateCameraAnimated:(BOOL)animated;
-(void)activateCamera;
-(void)willBeginDeactivationForTransitionToApps:(id)apps animated:(BOOL)animated;
-(BOOL)_isLockAlert;
-(void)prepareForExternalUIUnlock;
-(void)deactivate;
-(void)activate;
-(BOOL)_wantsToAnimateFromPasscodeLockOnFailedPasscodeAttemptAndBlocked;
-(void)finishUIUnlockFromSource:(int)source;
-(void)attemptToUnlockUIFromNotification;
-(BOOL)canBeDeactivatedForUIUnlockFromSource:(int)source;
-(void)prepareForUIUnlock;
-(BOOL)wantsPasscodeLockForUIUnlockFromSource:(int)source withOptions:(id)options;
-(BOOL)isPasscodeLockVisible;
-(void)setPasscodeLockVisible:(BOOL)visible animated:(BOOL)animated withUnlockSource:(int)unlockSource andOptions:(id)options;
-(void)setPasscodeLockVisible:(BOOL)visible animated:(BOOL)animated completion:(id)completion;
-(void)setPasscodeLockVisible:(BOOL)visible animated:(BOOL)animated;
-(void)updateLegibility;
-(BOOL)allowSystemGestureAtLocation:(CGPoint)location;
-(void)_transitionWallpaperFromLockWithOptionalOutTimingFunction:(id)optionalOutTimingFunction adjustWindowLevel:(BOOL)level completionHandler:(id)handler;
-(void)_transitionWallpaperFromLock;
-(void)viewDidDisappear:(BOOL)view;
-(void)viewWillAppear:(BOOL)view;
@end

